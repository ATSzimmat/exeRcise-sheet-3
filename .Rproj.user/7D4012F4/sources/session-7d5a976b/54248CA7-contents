# Sichern eines plots

library(tidyverse)


# Mittelwert aller Länder außer Iceland berechnen
birth_data_VIII_avg <- birth_data_VIII %>%
  filter(country != "iceland") %>%
  group_by(year) %>%
  summarise(value = mean(value, na.rm = TRUE), .groups = "drop") %>%
  mutate(country = "average (excl. Iceland and sweden)")

# Werte für Iceland herausfiltern
data_iceland <- birth_data_VIII %>%
  filter(country == "iceland")

# Werte für Sweden herausfiltern
data_sweden <- birth_data_VIII %>%
  filter(country == "sweden")

#  Alle Datensätze kombinieren
plot_data <- bind_rows(birth_data_VIII_avg, data_iceland, data_sweden)

#  Plot erstellen
ggplot(plot_data, aes(x = year, y = value, color = country)) +
  geom_line() +
  scale_color_manual(values = c(
    "average (excl. Iceland and sweden)" = "red",
    "iceland" = "darkblue",
    "sweden" = "darkgreen"
  )) +
  labs(
    title = "Vergleich: Mittelwert aller Länder (ohne Iceland), Iceland und Sweden",
    x = "Jahr",
    y = "Wert",
    color = "Linie"
  ) +
  theme_minimal()  

#  ---------------------------------------


# Loading the tidyverse
library(tidyverse)

# I choose the variable rotten_tomatoes
pixar_and_respnse_data_II <- pixar_and_respnse_data %>% select(series, film, release_date, rotten_tomatoes)

# films, where no rotten_tomatoes rating is available should be removed

pixar_and_respnse_data_II <- pixar_and_respnse_data_II %>% drop_na()

View(pixar_and_respnse_data_II)

pixar_and_respnse_data_II <- pixar_and_respnse_data_II %>% arrange(series, release_date) %>%
  mutate(film = factor(film, levels = unique(film)))


# Wir brauchen eine Farbenblinden freundliche Farbpalette ohne Verlauf
library(Polychrome)

# Generiere 15 Farben für 15 Serien
palette_15 <- createPalette(15) 

response_plot <- ggplot(pixar_and_respnse_data_II, aes(x = film, y = rotten_tomatoes, fill = series)) +
  geom_bar(stat = "identity") +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(x = "Film", y = "Rotten Tomatoes Score", title = "Rotten Tomatoes Scores by Film Series") + theme(legend.position = "top") +
  scale_fill_manual(values = palette_15)
response_plot

# ----------------------------------------------------





# Daten vorbereiten
pixar_and_respnse_data_II <- pixar_and_respnse_data %>%
  select(series, film, release_date, rotten_tomatoes) %>%
  drop_na() %>%
  arrange(series, release_date) %>%
  mutate(film = factor(film, levels = unique(film)))

# Farbpalette für 15 Serien generieren
palette_15 <- createPalette(15, c("#000000", "#FFFFFF"))

# Plot
response_plot <- ggplot(pixar_and_respnse_data_II, aes(x = film, y = rotten_tomatoes, fill = series)) +
  geom_bar(stat = "identity") +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(x = "Film", y = "Rotten Tomatoes Score", title = "Rotten Tomatoes Scores by Film Series") + 
  theme(legend.position = "top") +
  scale_fill_manual(values = palette_15)

response_plot
